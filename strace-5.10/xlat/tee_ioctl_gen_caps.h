/* Generated by ./xlat/gen.sh from ./xlat/tee_ioctl_gen_caps.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(TEE_GEN_CAP_GP) || (defined(HAVE_DECL_TEE_GEN_CAP_GP) && HAVE_DECL_TEE_GEN_CAP_GP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEE_GEN_CAP_GP) == ((1 << 0)), "TEE_GEN_CAP_GP != (1 << 0)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEE_GEN_CAP_GP (1 << 0)
#endif
#if defined(TEE_GEN_CAP_PRIVILEGED) || (defined(HAVE_DECL_TEE_GEN_CAP_PRIVILEGED) && HAVE_DECL_TEE_GEN_CAP_PRIVILEGED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEE_GEN_CAP_PRIVILEGED) == ((1 << 1)), "TEE_GEN_CAP_PRIVILEGED != (1 << 1)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEE_GEN_CAP_PRIVILEGED (1 << 1)
#endif
#if defined(TEE_GEN_CAP_REG_MEM) || (defined(HAVE_DECL_TEE_GEN_CAP_REG_MEM) && HAVE_DECL_TEE_GEN_CAP_REG_MEM)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEE_GEN_CAP_REG_MEM) == ((1 << 2)), "TEE_GEN_CAP_REG_MEM != (1 << 2)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEE_GEN_CAP_REG_MEM (1 << 2)
#endif
#if defined(TEE_GEN_CAP_MEMREF_NULL) || (defined(HAVE_DECL_TEE_GEN_CAP_MEMREF_NULL) && HAVE_DECL_TEE_GEN_CAP_MEMREF_NULL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEE_GEN_CAP_MEMREF_NULL) == ((1 << 3)), "TEE_GEN_CAP_MEMREF_NULL != (1 << 3)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEE_GEN_CAP_MEMREF_NULL (1 << 3)
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat tee_ioctl_gen_caps in mpers mode

# else

static const struct xlat_data tee_ioctl_gen_caps_xdata[] = {
 XLAT(TEE_GEN_CAP_GP),
 #define XLAT_VAL_0 ((unsigned) (TEE_GEN_CAP_GP))
 #define XLAT_STR_0 STRINGIFY(TEE_GEN_CAP_GP)
 XLAT(TEE_GEN_CAP_PRIVILEGED),
 #define XLAT_VAL_1 ((unsigned) (TEE_GEN_CAP_PRIVILEGED))
 #define XLAT_STR_1 STRINGIFY(TEE_GEN_CAP_PRIVILEGED)
 XLAT(TEE_GEN_CAP_REG_MEM),
 #define XLAT_VAL_2 ((unsigned) (TEE_GEN_CAP_REG_MEM))
 #define XLAT_STR_2 STRINGIFY(TEE_GEN_CAP_REG_MEM)
 XLAT(TEE_GEN_CAP_MEMREF_NULL),
 #define XLAT_VAL_3 ((unsigned) (TEE_GEN_CAP_MEMREF_NULL))
 #define XLAT_STR_3 STRINGIFY(TEE_GEN_CAP_MEMREF_NULL)
};
static
const struct xlat tee_ioctl_gen_caps[1] = { {
 .data = tee_ioctl_gen_caps_xdata,
 .size = ARRAY_SIZE(tee_ioctl_gen_caps_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
