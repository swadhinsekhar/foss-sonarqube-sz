/* Generated by ./xlat/gen.sh from ./xlat/rtnl_mdba_mdb_eattr_attrs.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(MDBA_MDB_EATTR_UNSPEC) || (defined(HAVE_DECL_MDBA_MDB_EATTR_UNSPEC) && HAVE_DECL_MDBA_MDB_EATTR_UNSPEC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MDBA_MDB_EATTR_UNSPEC) == (0), "MDBA_MDB_EATTR_UNSPEC != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MDBA_MDB_EATTR_UNSPEC 0
#endif
#if defined(MDBA_MDB_EATTR_TIMER) || (defined(HAVE_DECL_MDBA_MDB_EATTR_TIMER) && HAVE_DECL_MDBA_MDB_EATTR_TIMER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MDBA_MDB_EATTR_TIMER) == (1), "MDBA_MDB_EATTR_TIMER != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MDBA_MDB_EATTR_TIMER 1
#endif
#if defined(MDBA_MDB_EATTR_SRC_LIST) || (defined(HAVE_DECL_MDBA_MDB_EATTR_SRC_LIST) && HAVE_DECL_MDBA_MDB_EATTR_SRC_LIST)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MDBA_MDB_EATTR_SRC_LIST) == (2), "MDBA_MDB_EATTR_SRC_LIST != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MDBA_MDB_EATTR_SRC_LIST 2
#endif
#if defined(MDBA_MDB_EATTR_GROUP_MODE) || (defined(HAVE_DECL_MDBA_MDB_EATTR_GROUP_MODE) && HAVE_DECL_MDBA_MDB_EATTR_GROUP_MODE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MDBA_MDB_EATTR_GROUP_MODE) == (3), "MDBA_MDB_EATTR_GROUP_MODE != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MDBA_MDB_EATTR_GROUP_MODE 3
#endif
#if defined(MDBA_MDB_EATTR_SOURCE) || (defined(HAVE_DECL_MDBA_MDB_EATTR_SOURCE) && HAVE_DECL_MDBA_MDB_EATTR_SOURCE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MDBA_MDB_EATTR_SOURCE) == (4), "MDBA_MDB_EATTR_SOURCE != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MDBA_MDB_EATTR_SOURCE 4
#endif
#if defined(MDBA_MDB_EATTR_RTPROT) || (defined(HAVE_DECL_MDBA_MDB_EATTR_RTPROT) && HAVE_DECL_MDBA_MDB_EATTR_RTPROT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MDBA_MDB_EATTR_RTPROT) == (5), "MDBA_MDB_EATTR_RTPROT != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MDBA_MDB_EATTR_RTPROT 5
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat rtnl_mdba_mdb_eattr_attrs in mpers mode

# else

static const struct xlat_data rtnl_mdba_mdb_eattr_attrs_xdata[] = {
 [MDBA_MDB_EATTR_UNSPEC] = XLAT(MDBA_MDB_EATTR_UNSPEC),
 #define XLAT_VAL_0 ((unsigned) (MDBA_MDB_EATTR_UNSPEC))
 #define XLAT_STR_0 STRINGIFY(MDBA_MDB_EATTR_UNSPEC)
 [MDBA_MDB_EATTR_TIMER] = XLAT(MDBA_MDB_EATTR_TIMER),
 #define XLAT_VAL_1 ((unsigned) (MDBA_MDB_EATTR_TIMER))
 #define XLAT_STR_1 STRINGIFY(MDBA_MDB_EATTR_TIMER)
 [MDBA_MDB_EATTR_SRC_LIST] = XLAT(MDBA_MDB_EATTR_SRC_LIST),
 #define XLAT_VAL_2 ((unsigned) (MDBA_MDB_EATTR_SRC_LIST))
 #define XLAT_STR_2 STRINGIFY(MDBA_MDB_EATTR_SRC_LIST)
 [MDBA_MDB_EATTR_GROUP_MODE] = XLAT(MDBA_MDB_EATTR_GROUP_MODE),
 #define XLAT_VAL_3 ((unsigned) (MDBA_MDB_EATTR_GROUP_MODE))
 #define XLAT_STR_3 STRINGIFY(MDBA_MDB_EATTR_GROUP_MODE)
 [MDBA_MDB_EATTR_SOURCE] = XLAT(MDBA_MDB_EATTR_SOURCE),
 #define XLAT_VAL_4 ((unsigned) (MDBA_MDB_EATTR_SOURCE))
 #define XLAT_STR_4 STRINGIFY(MDBA_MDB_EATTR_SOURCE)
 [MDBA_MDB_EATTR_RTPROT] = XLAT(MDBA_MDB_EATTR_RTPROT),
 #define XLAT_VAL_5 ((unsigned) (MDBA_MDB_EATTR_RTPROT))
 #define XLAT_STR_5 STRINGIFY(MDBA_MDB_EATTR_RTPROT)
};
static
const struct xlat rtnl_mdba_mdb_eattr_attrs[1] = { {
 .data = rtnl_mdba_mdb_eattr_attrs_xdata,
 .size = ARRAY_SIZE(rtnl_mdba_mdb_eattr_attrs_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
